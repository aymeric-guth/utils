from .config import Config as Config
from typing import Callable

def clamp(lo: Union[int, float], hi: Union[int, float]) -> Callable[[Union[int, float]], Union[int, float]]: ...
def to_snake_case(s: str) -> str: ...
def to_kebab_case(s: str) -> str: ...

class SingletonMeta(type):
    def __call__(cls, *args, **kwargs): ...

def try_not(fnc, exc) -> Callable: ...
def ascii_int(b: bytes) -> int: ...
def lin_intp(v: int, xa: int, ya: int, xb: int, yb: int) -> int: ...
